Parameters:
  SecurityGroupDescription:
    Description: Security Group Description (Simple parameter)
    Type: String
  SecurityGroupPort:
    Description: sbdksbdks - Simple Description of a Number Parameter, with MinValue and MaxValue
    Type: Number
    MinValue: 20
    MaxValue: 65535
  InstanceType:
    Description: Linux ec2 instance
    Type: String
    Default: t2.micro
    AllowedValues:
      - t1.micro
      - t2.nano
      - t2.micro
      - t2.small
      - t3.micro
    ConstraintDescription: must be a valid EC2 instance type.
  DBPwd:
    NoEcho: true
    Description: The database admin account password (won't be echoed)
    Type: String
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances. Linked to AWS Parameter
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.

Mappings:
  AWSRegionArch2AMI: #NOT REGION SPECIFIC
    us-east-1: 
      AMI: ami-6869aa05 
    us-west-2:
      AMI: ami-7172b611
    us-west-1: 
      AMI: ami-31490d51
    eu-west-1:
      AMI: ami-f9dd458a
    eu-central-1:
      AMI: ami-ea26ce85
    ap-northeast-1:
      AMI: ami-374db956
    ap-northeast-2:
      AMI: ami-2b408b45
    ap-southeast-1:
      AMI: ami-a59b49c6
    ap-southeast-2:
      AMI: ami-dc361ebf
    ap-south-1:
      AMI: ami-ffbdd790
    us-east-2:
      AMI: ami-f6035893
    sa-east-1:
      AMI: ami-6dd04501
    cn-north-1:
      AMI: ami-8e6aa0e3

Resources:
  MyEC2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !Ref InstanceType 
      KeyName: !Ref KeyName
      ImageId: !FindInMap [AWSRegionArch2AMI, !Ref 'AWS::Region', AMI]
      SubnetId: !ImportValue SampleNetworkCrossStack-SubnetID
      SecurityGroupIds:
        - !ImportValue SampleNetworkCrossStack-SecurityGroupID
  IPAddress:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId: !Ref MyEC2Instance

Outputs:
  MyIPaddress:
    Description: Server Private IP
    Value: !GetAtt MyEC2Instance.PrivateIp
    Export:
      Name: !Sub "${AWS::StackName}-PrivateIp"
  MyDNSName:
    Description: DNS name
    Value: !GetAtt MyEC2Instance.PrivateDnsName
    Export:
      Name: !Sub "${AWS::StackName}-DNSName"